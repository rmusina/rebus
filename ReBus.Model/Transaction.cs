//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ReBus.Model
{
    public partial class Transaction
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual decimal Amount
        {
            get;
            set;
        }
    
        public virtual int Type
        {
            get;
            set;
        }
    
        public virtual Nullable<System.Guid> AssociatedGUID
        {
            get;
            set;
        }
    
        public virtual System.Guid AccountGUID
        {
            get { return _accountGUID; }
            set
            {
                if (_accountGUID != value)
                {
                    if (Account != null && Account.GUID != value)
                    {
                        Account = null;
                    }
                    _accountGUID = value;
                }
            }
        }
        private System.Guid _accountGUID;

        #endregion
        #region Navigation Properties
    
        public virtual Account Account
        {
            get { return _account; }
            set
            {
                if (!ReferenceEquals(_account, value))
                {
                    var previousValue = _account;
                    _account = value;
                    FixupAccount(previousValue);
                }
            }
        }
        private Account _account;

        #endregion
        #region Association Fixup
    
        private void FixupAccount(Account previousValue)
        {
            if (previousValue != null && previousValue.Transactions.Contains(this))
            {
                previousValue.Transactions.Remove(this);
            }
    
            if (Account != null)
            {
                if (!Account.Transactions.Contains(this))
                {
                    Account.Transactions.Add(this);
                }
                if (AccountGUID != Account.GUID)
                {
                    AccountGUID = Account.GUID;
                }
            }
        }

        #endregion
    }
}
