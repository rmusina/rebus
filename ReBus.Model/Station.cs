//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace ReBus.Model
{
    public partial class Station
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual double Latitude
        {
            get;
            set;
        }
    
        public virtual double Longitude
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Line> Lines
        {
            get
            {
                if (_lines == null)
                {
                    var newCollection = new FixupCollection<Line>();
                    newCollection.CollectionChanged += FixupLines;
                    _lines = newCollection;
                }
                return _lines;
            }
            set
            {
                if (!ReferenceEquals(_lines, value))
                {
                    var previousValue = _lines as FixupCollection<Line>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupLines;
                    }
                    _lines = value;
                    var newValue = value as FixupCollection<Line>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupLines;
                    }
                }
            }
        }
        private ICollection<Line> _lines;

        #endregion
        #region Association Fixup
    
        private void FixupLines(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Line item in e.NewItems)
                {
                    if (!item.Stations.Contains(this))
                    {
                        item.Stations.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Line item in e.OldItems)
                {
                    if (item.Stations.Contains(this))
                    {
                        item.Stations.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
