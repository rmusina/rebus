//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "BusLine", "Bus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReBus.Model.Bus), "Line", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReBus.Model.Line), true)]
[assembly: EdmRelationshipAttribute("Model1", "TransactionAccount", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReBus.Model.Transaction), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReBus.Model.Account), true)]
[assembly: EdmRelationshipAttribute("Model1", "TicketAccount", "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReBus.Model.Ticket), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReBus.Model.Account), true)]
[assembly: EdmRelationshipAttribute("Model1", "SubscriptionAccount", "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReBus.Model.Subscription), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReBus.Model.Account), true)]
[assembly: EdmRelationshipAttribute("Model1", "TicketBus", "Ticket", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReBus.Model.Ticket), "Bus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ReBus.Model.Bus), true)]
[assembly: EdmRelationshipAttribute("Model1", "SubscriptionLine", "Subscription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReBus.Model.Subscription), "Line", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ReBus.Model.Line))]

#endregion

namespace ReBus.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Line> Lines
        {
            get
            {
                if ((_Lines == null))
                {
                    _Lines = base.CreateObjectSet<Line>("Lines");
                }
                return _Lines;
            }
        }
        private ObjectSet<Line> _Lines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bus> Buses
        {
            get
            {
                if ((_Buses == null))
                {
                    _Buses = base.CreateObjectSet<Bus>("Buses");
                }
                return _Buses;
            }
        }
        private ObjectSet<Bus> _Buses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subscription> Subscriptions
        {
            get
            {
                if ((_Subscriptions == null))
                {
                    _Subscriptions = base.CreateObjectSet<Subscription>("Subscriptions");
                }
                return _Subscriptions;
            }
        }
        private ObjectSet<Subscription> _Subscriptions;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLines(Line line)
        {
            base.AddObject("Lines", line);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Buses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBuses(Bus bus)
        {
            base.AddObject("Buses", bus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subscriptions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubscriptions(Subscription subscription)
        {
            base.AddObject("Subscriptions", subscription);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="credit">Initial value of the Credit property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static Account CreateAccount(global::System.Guid gUID, global::System.String passwordHash, global::System.String firstName, global::System.String lastName, global::System.Decimal credit, global::System.String username)
        {
            Account account = new Account();
            account.GUID = gUID;
            account.PasswordHash = passwordHash;
            account.FirstName = firstName;
            account.LastName = lastName;
            account.Credit = credit;
            account.Username = username;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Credit
        {
            get
            {
                return _Credit;
            }
            set
            {
                OnCreditChanging(value);
                ReportPropertyChanging("Credit");
                _Credit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Credit");
                OnCreditChanged();
            }
        }
        private global::System.Decimal _Credit;
        partial void OnCreditChanging(global::System.Decimal value);
        partial void OnCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TransactionAccount", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("Model1.TransactionAccount", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("Model1.TransactionAccount", "Transaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TicketAccount", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("Model1.TicketAccount", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("Model1.TicketAccount", "Ticket", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "SubscriptionAccount", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("Model1.SubscriptionAccount", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("Model1.SubscriptionAccount", "Subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Bus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bus object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="lineGUID">Initial value of the LineGUID property.</param>
        public static Bus CreateBus(global::System.Guid gUID, global::System.Guid lineGUID)
        {
            Bus bus = new Bus();
            bus.GUID = gUID;
            bus.LineGUID = lineGUID;
            return bus;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LineGUID
        {
            get
            {
                return _LineGUID;
            }
            set
            {
                OnLineGUIDChanging(value);
                ReportPropertyChanging("LineGUID");
                _LineGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LineGUID");
                OnLineGUIDChanged();
            }
        }
        private global::System.Guid _LineGUID;
        partial void OnLineGUIDChanging(global::System.Guid value);
        partial void OnLineGUIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "BusLine", "Line")]
        public Line Line
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Line>("Model1.BusLine", "Line").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Line>("Model1.BusLine", "Line").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Line> LineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Line>("Model1.BusLine", "Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Line>("Model1.BusLine", "Line", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TicketBus", "Ticket")]
        public EntityCollection<Ticket> Tickets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ticket>("Model1.TicketBus", "Ticket");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ticket>("Model1.TicketBus", "Ticket", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Line")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Line : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Line object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Line CreateLine(global::System.Guid gUID, global::System.String name)
        {
            Line line = new Line();
            line.GUID = gUID;
            line.Name = name;
            return line;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "BusLine", "Bus")]
        public EntityCollection<Bus> Buses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bus>("Model1.BusLine", "Bus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bus>("Model1.BusLine", "Bus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "SubscriptionLine", "Subscription")]
        public EntityCollection<Subscription> Subscriptions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Subscription>("Model1.SubscriptionLine", "Subscription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Subscription>("Model1.SubscriptionLine", "Subscription", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Subscription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subscription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subscription object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="accountGUID">Initial value of the AccountGUID property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="validity">Initial value of the Validity property.</param>
        public static Subscription CreateSubscription(global::System.Guid gUID, global::System.Guid accountGUID, global::System.DateTime start, global::System.DateTimeOffset validity)
        {
            Subscription subscription = new Subscription();
            subscription.GUID = gUID;
            subscription.AccountGUID = accountGUID;
            subscription.Start = start;
            subscription.Validity = validity;
            return subscription;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountGUID
        {
            get
            {
                return _AccountGUID;
            }
            set
            {
                OnAccountGUIDChanging(value);
                ReportPropertyChanging("AccountGUID");
                _AccountGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountGUID");
                OnAccountGUIDChanged();
            }
        }
        private global::System.Guid _AccountGUID;
        partial void OnAccountGUIDChanging(global::System.Guid value);
        partial void OnAccountGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTimeOffset Validity
        {
            get
            {
                return _Validity;
            }
            set
            {
                OnValidityChanging(value);
                ReportPropertyChanging("Validity");
                _Validity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Validity");
                OnValidityChanged();
            }
        }
        private global::System.DateTimeOffset _Validity;
        partial void OnValidityChanging(global::System.DateTimeOffset value);
        partial void OnValidityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "SubscriptionAccount", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.SubscriptionAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.SubscriptionAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.SubscriptionAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("Model1.SubscriptionAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "SubscriptionLine", "Line")]
        public EntityCollection<Line> Lines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Line>("Model1.SubscriptionLine", "Line");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Line>("Model1.SubscriptionLine", "Line", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="gUID">Initial value of the GUID property.</param>
        /// <param name="accountGUID">Initial value of the AccountGUID property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="busGUID">Initial value of the BusGUID property.</param>
        public static Ticket CreateTicket(global::System.Guid gUID, global::System.Guid accountGUID, global::System.DateTime created, global::System.Guid busGUID)
        {
            Ticket ticket = new Ticket();
            ticket.GUID = gUID;
            ticket.AccountGUID = accountGUID;
            ticket.Created = created;
            ticket.BusGUID = busGUID;
            return ticket;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GUID
        {
            get
            {
                return _GUID;
            }
            set
            {
                if (_GUID != value)
                {
                    OnGUIDChanging(value);
                    ReportPropertyChanging("GUID");
                    _GUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GUID");
                    OnGUIDChanged();
                }
            }
        }
        private global::System.Guid _GUID;
        partial void OnGUIDChanging(global::System.Guid value);
        partial void OnGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountGUID
        {
            get
            {
                return _AccountGUID;
            }
            set
            {
                OnAccountGUIDChanging(value);
                ReportPropertyChanging("AccountGUID");
                _AccountGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountGUID");
                OnAccountGUIDChanged();
            }
        }
        private global::System.Guid _AccountGUID;
        partial void OnAccountGUIDChanging(global::System.Guid value);
        partial void OnAccountGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BusGUID
        {
            get
            {
                return _BusGUID;
            }
            set
            {
                OnBusGUIDChanging(value);
                ReportPropertyChanging("BusGUID");
                _BusGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BusGUID");
                OnBusGUIDChanged();
            }
        }
        private global::System.Guid _BusGUID;
        partial void OnBusGUIDChanging(global::System.Guid value);
        partial void OnBusGUIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TicketAccount", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.TicketAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.TicketAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.TicketAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("Model1.TicketAccount", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TicketBus", "Bus")]
        public Bus Bus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bus>("Model1.TicketBus", "Bus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bus>("Model1.TicketBus", "Bus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bus> BusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bus>("Model1.TicketBus", "Bus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bus>("Model1.TicketBus", "Bus", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="accountGUID">Initial value of the AccountGUID property.</param>
        public static Transaction CreateTransaction(global::System.Int32 id, global::System.Decimal amount, global::System.Int32 type, global::System.Guid accountGUID)
        {
            Transaction transaction = new Transaction();
            transaction.Id = id;
            transaction.Amount = amount;
            transaction.Type = type;
            transaction.AccountGUID = accountGUID;
            return transaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> AssociatedGUID
        {
            get
            {
                return _AssociatedGUID;
            }
            set
            {
                OnAssociatedGUIDChanging(value);
                ReportPropertyChanging("AssociatedGUID");
                _AssociatedGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssociatedGUID");
                OnAssociatedGUIDChanged();
            }
        }
        private Nullable<global::System.Guid> _AssociatedGUID;
        partial void OnAssociatedGUIDChanging(Nullable<global::System.Guid> value);
        partial void OnAssociatedGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountGUID
        {
            get
            {
                return _AccountGUID;
            }
            set
            {
                OnAccountGUIDChanging(value);
                ReportPropertyChanging("AccountGUID");
                _AccountGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountGUID");
                OnAccountGUIDChanged();
            }
        }
        private global::System.Guid _AccountGUID;
        partial void OnAccountGUIDChanging(global::System.Guid value);
        partial void OnAccountGUIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "TransactionAccount", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.TransactionAccount", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.TransactionAccount", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("Model1.TransactionAccount", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("Model1.TransactionAccount", "Account", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
